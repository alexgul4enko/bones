(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{124:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(1),a=n(6),i=(n(0),n(159)),o={id:"useGraphInifnyList",title:"useGraphInifnyList",sidebar_label:"useGraphInifnyList"},c={id:"resources/graphql/useGraphInifnyList",title:"useGraphInifnyList",description:"## ~~useGraphInifnyList~~",source:"@site/docs/resources/graphql/useGraphInifnyList.md",permalink:"/bones/docs/resources/graphql/useGraphInifnyList",editUrl:"https://github.com/alexgul4enko/bones/tree/master/docs/docs/resources/graphql/useGraphInifnyList.md",sidebar_label:"useGraphInifnyList",sidebar:"resourcesSitebar",previous:{title:"usePrefetchQuery",permalink:"/bones/docs/resources/graphql/usePrefetchQuery"},next:{title:"Hooks",permalink:"/bones/docs/resources/resource_hooks"}},s=[{value:"<del>useGraphInifnyList</del>",id:"usegraphinifnylist",children:[]},{value:"<del>API</del>",id:"api",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"usegraphinifnylist"},Object(i.b)("del",{parentName:"h2"},"useGraphInifnyList")),Object(i.b)("p",null,Object(i.b)("del",{parentName:"p"},"useGraphInifnyList")," is Hook to work with infinityList like FlatList in React-Native or window-scroller in web."),Object(i.b)("h2",{id:"api"},Object(i.b)("del",{parentName:"h2"},"API")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"useGraphInifnyList(graphtResource)\n")),Object(i.b)("p",null,"Returns additional methods "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("del",{parentName:"li"},"loadNext")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("del",{parentName:"li"},"refresh"))),Object(i.b)("p",null,"And Boolean flag ",Object(i.b)("del",{parentName:"p"},"isRefreshing")),Object(i.b)("p",null,"This Hook is recomended to use with infinity List, while it will implement in additional some logic like:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"terminate API request on unmount"),Object(i.b)("li",{parentName:"ul"},"terminate load next requests on refresh"),Object(i.b)("li",{parentName:"ul"},"check if list has more data to load"),Object(i.b)("li",{parentName:"ul"},"do not load next pages while previous are not loaded")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),"query PRODUCTS ($first: Int, $cursor: String){\n  products(first: $first, after: $cursor) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        id\n        name\n        }\n      }\n    }\n  }\n\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"import { usePrefetchQuery, useGraphInifnyList } from '@cranium/resource'\n\nfunction Products() {\n  const products = usePrefetchQuery(PRODUCTS, { parseValue: 'data.products' })({ first: 16 })\n  const { loadNext, refresh, isRefreshing } = useGraphInifnyList(products)\n  \n}\n\n")),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},Object(i.b)("em",{parentName:"p"},"useGraphInifnyList")," will only work if your graphQL  pagination that works based on ",Object(i.b)("inlineCode",{parentName:"p"},"pageInfo.endCursor"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"pageInfo.hasNextPage")," and ",Object(i.b)("inlineCode",{parentName:"p"},"first"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"after")," properties."),Object(i.b)("p",{parentName:"div"},"Also do not forget to add ",Object(i.b)("inlineCode",{parentName:"p"},"pageInfo")," to schema definition and do not remove this values in ",Object(i.b)("inlineCode",{parentName:"p"},"parseValue")," function"))),Object(i.b)("p",null,Object(i.b)("del",{parentName:"p"},"useGraphInifnyList")," will automatically concatenate your ",Object(i.b)("inlineCode",{parentName:"p"},"edges")," on ",Object(i.b)("del",{parentName:"p"},"loadNext"),"  and refresh all data on ",Object(i.b)("del",{parentName:"p"},"refresh"),". So basically do not do anything else to make it work)))"))}p.isMDXComponent=!0},159:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return n?a.a.createElement(m,c({ref:t},l,{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);