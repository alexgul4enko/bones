(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(e,r,t){"use strict";t.d(r,"a",(function(){return l})),t.d(r,"b",(function(){return b}));var n=t(0),s=t.n(n);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=s.a.createContext({}),i=function(e){var r=s.a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):a({},r,{},e)),t},l=function(e){var r=i(e.components);return s.a.createElement(p.Provider,{value:r},e.children)},y={inlineCode:"code",wrapper:function(e){var r=e.children;return s.a.createElement(s.a.Fragment,{},r)}},m=Object(n.forwardRef)((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),l=i(t),m=n,b=l["".concat(c,".").concat(m)]||l[m]||y[m]||o;return t?s.a.createElement(b,a({ref:r},p,{components:t})):s.a.createElement(b,a({ref:r},p))}));function b(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,c=new Array(o);c[0]=m;var a={};for(var u in r)hasOwnProperty.call(r,u)&&(a[u]=r[u]);a.originalType=e,a.mdxType="string"==typeof e?e:n,c[1]=a;for(var p=2;p<o;p++)c[p]=t[p];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},98:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return a})),t.d(r,"rightToc",(function(){return u})),t.d(r,"default",(function(){return i}));var n=t(1),s=t(6),o=(t(0),t(169)),c={id:"resource_ts",title:"TypeScript",sidebar_label:"TypeScript"},a={id:"resources/resource_ts",title:"TypeScript",description:"## Hooks ",source:"@site/docs/resources/typescript.md",permalink:"/bones/docs/resources/resource_ts",editUrl:"https://github.com/alexgul4enko/bones/tree/master/docs/docs/resources/typescript.md",sidebar_label:"TypeScript",sidebar:"resourcesSitebar",previous:{title:"Change Resource Config",permalink:"/bones/docs/resources/resource_rewrite"},next:{title:"useResource",permalink:"/bones/docs/resources/hooks/use-resource"}},u=[{value:"Hooks",id:"hooks",children:[{value:"useResource",id:"useresource",children:[]},{value:"useResourceData",id:"useresourcedata",children:[]},{value:"usePrefetchRequest",id:"useprefetchrequest",children:[]},{value:"useCustomRequest",id:"usecustomrequest",children:[]},{value:"usePrefetchResource",id:"useprefetchresource",children:[]}]},{value:"ResourceType",id:"resourcetype",children:[]}],p={rightToc:u};function i(e){var r=e.components,t=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,t,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"hooks"},"Hooks"),Object(o.b)("p",null,"Types declarations for Resources hooks:"),Object(o.b)("h3",{id:"useresource"},"useResource"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { useResource } from '@cranium/resource'\n\ntype User = {\n    id: string,\n    name: string\n}\n\ntype UserDataType = User[]\n\ntype UserErrorType = {\n    message: string\n}\n\ntype UserFilterType = {\n    offset: string | number\n    limit: string | number\n}\n\nfunction MyReactComponent () {\n  const { data, isLoading,  errors, fetch } = useResource<UserDataType, UserErrorType, UserFilterType>('users')\n  \n}\n")),Object(o.b)("h3",{id:"useresourcedata"},"useResourceData"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { useResourceData } from '@cranium/resource'\nimport { UserDataType, UserErrorType, UserErrorType, UserFilterType } from './types'\n\nfunction MyReactComponent () {\n  const { data, isLoading,  errors, fetch } = useResourceData<UserDataType, UserErrorType, UserFilterType>('users')\n}\n")),Object(o.b)("h3",{id:"useprefetchrequest"},"usePrefetchRequest"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { usePrefetchRequest } from '@cranium/resource'\nimport { API } from '@cranium/api'\nimport { UserDataType, UserErrorType, UserErrorType, UserFilterType } from './types'\n\nfunction tryAsync(api:typeof API) {\n  return api.get('/users')\n}\n\nfunction MyReactComponent () {\n  const { data, isLoading,  errors, fetch } = usePrefetchRequest<UserDataType, UserErrorType, UserFilterType>('users')\n}\n")),Object(o.b)("h3",{id:"usecustomrequest"},"useCustomRequest"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { useCustomRequest } from '@cranium/resource'\nimport { API } from '@cranium/api'\nimport { UserDataType, UserErrorType, UserErrorType, UserFilterType } from './types'\n\nfunction tryAsync(api:typeof API) {\n  return api.get('/users')\n}\n\nfunction MyReactComponent () {\n  const { data, isLoading,  errors, fetch } = useCustomRequest<UserDataType, UserErrorType, UserFilterType>('users')\n}\n")),Object(o.b)("h3",{id:"useprefetchresource"},"usePrefetchResource"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { usePrefetchResource } from '@cranium/resource'\nimport { UserDataType, UserErrorType, UserErrorType, UserFilterType } from './types'\n\nfunction MyReactComponent () {\n  const { data, isLoading,  errors, fetch } = usePrefetchResource<UserDataType, UserErrorType, UserFilterType>('users')\n}\n")),Object(o.b)("h2",{id:"resourcetype"},"ResourceType"),Object(o.b)("p",null,"React  ",Object(o.b)("inlineCode",{parentName:"p"},"Resource")," property type"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"import { ResourceType } from '@cranium/resource';\n\ninterface IProps {\n    users: ResourceType<DataType, FiltersType, ErrorType, OptionsType>\n}\nexport const MyComponent:FC<IProps> = (props)=> (<ChildComponent {...props}/>)\n")))}i.isMDXComponent=!0}}]);