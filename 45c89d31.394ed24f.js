(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{124:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return l}));var r=t(1),o=t(6),c=(t(0),t(169)),a={id:"use-prefetch-resource",title:"usePrefetchResource",sidebar_label:"usePrefetchResource"},s={id:"resources/hooks/use-prefetch-resource",title:"usePrefetchResource",description:"## basic",source:"@site/docs/resources/hooks/prefetch-resource.md",permalink:"/bones/docs/resources/hooks/use-prefetch-resource",editUrl:"https://github.com/alexgul4enko/bones/tree/master/docs/docs/resources/hooks/prefetch-resource.md",sidebar_label:"usePrefetchResource",sidebar:"resourcesSitebar",previous:{title:"useResource",permalink:"/bones/docs/resources/hooks/use-resource-usage"},next:{title:"useCustomRequest",permalink:"/bones/docs/resources/hooks/use-custom-request"}},i=[{value:"basic",id:"basic",children:[]},{value:"prefetchConfigs",id:"prefetchconfigs",children:[{value:"filters",id:"filters",children:[]},{value:"method",id:"method",children:[]},{value:"destroyOnUnmount",id:"destroyonunmount",children:[]}]}],u={rightToc:i};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"basic"},"basic"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"usePrefetchResource(resourceConfig, prefetchConfigs)\n")),Object(c.b)("p",null,"Hook that returns same actions and data as ",Object(c.b)("inlineCode",{parentName:"p"},"useResource")," hook. In additional ",Object(c.b)("inlineCode",{parentName:"p"},"usePrefetchResource")," hook will:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"send initial Request on mount"),Object(c.b)("li",{parentName:"ul"},"terminate pending request on unmount"),Object(c.b)("li",{parentName:"ul"},"clear resource on unmount"),Object(c.b)("li",{parentName:"ul"},"returns aditional ",Object(c.b)("inlineCode",{parentName:"li"},"initialLoading")," indicator")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{27}","{27}":!0}),"import { usePrefetchResource } from '@cranium/resource'\n\nconst resourceConfig = {\n    namespace: 'users',\n    endpoint: '/users',\n}\nfunction MyReactComponent () {\n    const {\n        data,            // body from success HTTP request\n        isLoading,       // boolean flag that fill be automatically toggle while using fetch|fetchOptions|create|update|remove actions\n        options,         // body from success OPTIONS HTTP request\n        errors,          // errors from HTTP request\n        filters,         // JSON representation of query string\n        // async actions\n        fetch,           // action to send GET HTTP request\n        fetchOptions,    // action to send OPTIONS HTTP request\n        create,          // action to send POST HTTP request\n        replace,         // action to send PUT HTTP request\n        update,          // action to send PATCH HTTP request\n        remove,          // action to send DELETE HTTP request \n        // sync actions\n        setData,         // action to change data\n        setLoading,      // action to toggle loading flag\n        setErrors,       // action to change errors\n        setFilters,      // action to change filters\n        clear,           // action to delete all resource:  data,isLoading,options,errors,filters,\n        initialLoading   // boolean to determinate only initial fetch Request\n    } = usePrefetchResource(resourceConfig)\n}\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"usePrefetchResource")," accepts 2 arguments:\n1. resourceConfig. ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/resources/hooks/use-resource"}),"Resource config"),"\n2. prefetchConfigs. Additional configurations to customize ",Object(c.b)("inlineCode",{parentName:"p"},"prefetch")," logic."),Object(c.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(c.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(c.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(c.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"In case you need to send HTTP request to get data to render Component, we strongly recommend to use ",Object(c.b)("inlineCode",{parentName:"p"},"usePrefetchResource")," hook. These will cover the most common scenarios and let you avoid duplicating code."))),Object(c.b)("h2",{id:"prefetchconfigs"},"prefetchConfigs"),Object(c.b)("h3",{id:"filters"},"filters"),Object(c.b)("p",null,"Payload to pass to initial API Request"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{27}","{27}":!0}),"import { usePrefetchResource } from '@cranium/resource'\n\nconst resourceConfig = {\n    namespace: 'users',\n    endpoint: '/users',\n}\n// no configs defined\n// GET /api/users on Mount\nfunction MyReactComponent () {\n    const { data } = usePrefetchResource(resourceConfig)\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{27}","{27}":!0}),"import { usePrefetchResource } from '@cranium/resource'\n\nconst resourceConfig = {\n    namespace: 'users',\n    endpoint: '/users/:uuid?',\n}\n\n// GET /api/users/33 on Mount\nfunction MyReactComponent () {\n    const { data } = usePrefetchResource(resourceConfig, { filters: { uuid: 33 } })\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{27}","{27}":!0}),"import { usePrefetchResource } from '@cranium/resource'\n\nconst resourceConfig = {\n    namespace: 'users',\n    endpoint: '/users',\n    queries: ['offset', 'limit']\n}\n\n// GET /api/users?offset=0&limit=10 on Mount\nfunction MyReactComponent () {\n    const { data } = usePrefetchResource(resourceConfig, { filters: { offset: 0, limit: 10 } })\n}\n")),Object(c.b)("h3",{id:"method"},"method"),Object(c.b)("p",null,"String ",Object(c.b)("inlineCode",{parentName:"p"},"GET|POST"),". Default ",Object(c.b)("inlineCode",{parentName:"p"},"GET"),". String configuration to control initial request HTTP Method."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// GET /api/users\nimport { usePrefetchResource } from '@cranium/resource'\n\nfunction MyReactComponent () {\n  const { data } = usePrefetchResource('users')\n}\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// POST /api/users\nimport { usePrefetchResource } from '@cranium/resource'\n\nfunction MyReactComponent () {\n  const { data } = usePrefetchResource('users', { method: 'POST' })\n}\n")),Object(c.b)("h3",{id:"destroyonunmount"},"destroyOnUnmount"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"Boolean")," flag. Default ",Object(c.b)("inlineCode",{parentName:"p"},"true"),". Flag to control whenever to delete resource data on component unmount."),Object(c.b)("p",null,"In case you need to save Component data even if Component was removed from the dom (in memory cache)"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import { usePrefetchResource } from '@cranium/resource'\n\nfunction MyReactComponent () {\n  const { data } = usePrefetchResource('users', { destroyOnUnmount: false })\n}\n")))}l.isMDXComponent=!0},169:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var r=t(0),o=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),l=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},p=function(e){var n=l(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,d=p["".concat(a,".").concat(m)]||p[m]||b[m]||c;return t?o.a.createElement(d,s({ref:n},u,{components:t})):o.a.createElement(d,s({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,a=new Array(c);a[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<c;u++)a[u]=t[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);